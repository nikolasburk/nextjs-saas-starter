generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ActivityLog {
  id        Int      @id @default(autoincrement())
  teamId    Int
  userId    Int?
  action    String
  timestamp DateTime @default(now()) @db.Timestamp(6)
  ipAddress String?  @db.VarChar(45)
  team      Team     @relation(fields: [teamId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user      User?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Invitation {
  id        Int      @id @default(autoincrement())
  teamId    Int
  email     String   @db.VarChar(255)
  role      String   @db.VarChar(50)
  invitedBy Int
  invitedAt DateTime @default(now()) @db.Timestamp(6)
  status    String   @default("pending") @db.VarChar(20)
  inviter   User     @relation(fields: [invitedBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team      Team     @relation(fields: [teamId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model TeamMember {
  id       Int      @id @default(autoincrement())
  userId   Int
  teamId   Int
  role     String   @db.VarChar(50)
  joinedAt DateTime @default(now()) @db.Timestamp(6)
  team     Team     @relation(fields: [teamId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user     User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Team {
  id                   Int           @id @default(autoincrement())
  name                 String        @db.VarChar(100)
  createdAt            DateTime      @default(now()) @db.Timestamp(6)
  updatedAt            DateTime      @default(now()) @db.Timestamp(6)
  stripeCustomerId     String?       @unique
  stripeSubscriptionId String?       @unique
  stripeProductId      String?
  planName             String?       @db.VarChar(50)
  subscriptionStatus   String?       @db.VarChar(20)
  activityLogs         ActivityLog[]
  invitations          Invitation[]
  teamMembers          TeamMember[]
}

model User {
  id           Int           @id @default(autoincrement())
  name         String?       @db.VarChar(100)
  email        String        @unique @db.VarChar(255)
  passwordHash String
  role         String        @default("member") @db.VarChar(20)
  createdAt    DateTime      @default(now()) @db.Timestamp(6)
  updatedAt    DateTime      @default(now()) @db.Timestamp(6)
  deletedAt    DateTime?     @db.Timestamp(6)
  activityLogs ActivityLog[]
  invitations  Invitation[]
  teamMembers  TeamMember[]
}
